services:
  redis:
    image: redis:alpine
    container_name: redis_db
    command: redis-server --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - ./data:/data
    restart: always
  # cassandra:
  #   container_name: "cassandra"
  #   image: docker.io/bitnami/cassandra:latest
  #   ports:
  #     - '9042:9042'
  #   volumes:
  #     - ./data-init/cassandra:/docker-entrypoint-initdb.d
  #     - 'cassandra_data:/bitnami'
  #   healthcheck:
  #     test: [ "CMD", "/opt/bitnami/cassandra/bin/cqlsh", "-u cassandra", "-p cassandra" ,"-e \"describe keyspaces\"" ]
  #     interval: 15s
  #     timeout: 10s
  #     retries: 10
  #   environment:
  #     - CASSANDRA_SEEDS:cassandra
  #     - CASSANDRA_PASSWORD_SEEDER:yes
  #     - CASSANDRA_PASSWORD:cassandra
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    volumes:
      - "kafka_data:/kafka"
      - ./data-init/kafka:/docker-entrypoint-initdb.d
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092      
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  cassandra_data:
    driver: local    


